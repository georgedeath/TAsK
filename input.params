/***********Example file with parameters
  Solve the additive traffic assignment problem on the SiouxFalls instance
  with the algorithm B based on quadratic approximation.
*/

<NETWORK>: {INTENTIONALLY_BLANK}   // path to file with network
<OD_MATRIX>: {INTENTIONALLY_BLANK} // path to file with O-D matrix

<WRITE_RND_TOLLS_TO_FILE>: {}
<RND_TOLLS_PROBABILITY>: {}
<RND_TOLLS_MAX_TOLL>: {}

<INDIFF_CURVE_TYPE>: {}
<INDIFF_CURVE>: {}

<MAX_NB_POINTS_PER_CURVE>: {}
<MAX_TOLL> : {}
<MAX_TIME> : {}
<NODES>: {}

<TIME_LIMIT> : {20000} // in seconds
<ShPathAlgo> : {LC}  // LC, Astar
<UseP2PShPathWithRandomReturn>: {}
<FIXED_PROBABILITY>: {}
<CONV_MEASURE>: {RGAP}
<PRECISION>: {1e-7}
<ZERO_FLOW>: {0}
<DIR_TOLERANCE>: {1e-15}
<ALGORITHM>: {TAPAS}
		 	<LINE_SEARCH>: {QUAD_APP} // BISEC, ARMIJO, QUAD_APP
				<LS_PRECISION>: {1e-15} // line search precision
				<ARMIJO_DEC>: {2}       // decrement in Armijo line search
			<EQUILIBRATION>: {EQI}
			<MAX_ITER>: {0}
			<APPROACH>: {APP1}
			<ALPHA>: {0}
			<SLOPE>: {0.1}
			<ISP_SCALE>: {0.1}
			<NEWTON_STEPS>: {SINGLE}
			<MU>: {0.5}
			<V>: {0.25}

<BIOBJ_SHPATH_P2P>: {}
<BLS_BOUNDS> : {}
<USE_EXISTING_PATHS> : {}
<USE_PATH_COST_DOMINATION> : {}

<SHOW_CONVERGENCE>: {true} // if not blank then prints convergence to screen

<LINK_FLOWS>: {INTENTIONALLY_BLANK} // path to file where flow will be saved
<CONVERGENCE>: {} // path to file where convergence will be saved
<PATH_SET>: {}
<LATEX_OUTPUT>: {}

<COST_FUNC>: {SATURN}
